(*axiomatic spec foo(x) [[(not(typeOf(x) == Bitvector(64i) /\ (x==0x1v64)))]] [[(ret == 1i)]] normal*)
(*axiomatic spec foo(x) [[((typeOf(x) == Bitvector(64i) /\ (x==0x1v64)))]] [[emp]] error *)


bispec foo(x) : [[emp]]
proc foo(x) {
    assert((typeOf(x) == Bitvector(64i) \/ not(typeOf(x) == Bitvector(64i))));
    ret := 1i;
    return
};

(*
bispec load_a_ptr(x) : [[types(x : List) * ((l-len x) == 2i)]]
proc load_a_ptr(x) {
    ptr_offset := l-nth(x, 1i);
    ptr_label := l-nth(x, 0i);

    ptr_l := [load]("i-or-ptr", ptr_label, ptr_offset);
    ivalue := l-nth(ptr_l, 0i);
    assert(((l-nth(ivalue, 0i) == "int-64" /\ typeOf(l-nth(ivalue, 1i)) == Bitvector(64i))
     \/ (l-nth(ivalue, 0i) == "ptr" /\ typeOf(l-nth(ivalue, 1i)) == List)));
    i := l-nth(ivalue, 1i);
    ret := "foo"(i);
    return
};*)

predicate tree(+t) {
    (t == null);
    (t -b-> #v, #left, #right) * tree(#left) * tree(#right)
}

{ (x == #x) * tree(#x) }
proc tree_dispose(x) {
  if (x != null) {
    y := [x+1];
    z := [x+2];
    u := tree_dispose(y);
    u := tree_dispose(z);
    delete(x)
  } else {
    skip
  };
  return null
}
{ emp }

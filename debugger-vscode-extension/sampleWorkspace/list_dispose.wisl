predicate list(+x, alpha) {
  (x == null) * (alpha == nil);
  (x -b> #v, #z) * list(#z, #beta) *
  (alpha == #v::#beta)
}

{ (x == #x) * list(#x, #alpha) }
function list_dispose(x) {
  if (not (x = null)) {
    tail := [x + 1];
    delete(x);
    u := list_dispose(tail);
    delete(x)
  } else {
    skip
  };
  return null
}
{ emp }














